# Generated by Django 3.1.2 on 2020-10-27 14:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('zip_code', models.IntegerField(db_column='Zip_code', primary_key=True, serialize=False)),
                ('city', models.CharField(db_column='City', max_length=20)),
                ('state', models.CharField(db_column='State', max_length=20)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdministrativeReforms',
            fields=[
                ('arg_id', models.IntegerField(db_column='ARG_ID', primary_key=True, serialize=False)),
                ('reforms_type', models.CharField(db_column='Reforms_type', max_length=30)),
                ('person_concerned', models.CharField(blank=True, db_column='Person_concerned', max_length=45, null=True)),
            ],
            options={
                'db_table': 'administrative_reforms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.CharField(db_column='Department_ID', max_length=12, primary_key=True, serialize=False)),
                ('department_name', models.CharField(db_column='Department_name', max_length=30)),
                ('bio', models.CharField(blank=True, db_column='Bio', max_length=100, null=True)),
                ('photo', models.TextField(db_column='Photo')),
                ('dep_street', models.CharField(db_column='Dep_street', max_length=45)),
                ('no_of_reports', models.IntegerField(db_column='No_of_reports')),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grievance',
            fields=[
                ('grievance_id', models.AutoField(db_column='Grievance_ID', primary_key=True, serialize=False)),
                ('subject', models.CharField(db_column='Subject', max_length=30)),
                ('grievance', models.CharField(db_column='Grievance', max_length=200)),
                ('upvote', models.IntegerField(db_column='Upvote')),
                ('downvote', models.IntegerField(db_column='Downvote')),
                ('current_status', models.CharField(db_column='Current_status', max_length=20)),
            ],
            options={
                'db_table': 'grievance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImportantDatesMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('important_dates', models.CharField(db_column='Important_dates', max_length=15, unique=True)),
            ],
            options={
                'db_table': 'important_dates_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MobileNumberMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile_number', models.CharField(db_column='Mobile_number', max_length=15, unique=True)),
            ],
            options={
                'db_table': 'mobile_number_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('aadhaar_number', models.CharField(db_column='Aadhaar_number', max_length=12, primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='First_name', max_length=20)),
                ('last_name', models.CharField(db_column='Last_name', max_length=20)),
                ('date_of_birth', models.DateField(db_column='Date_of_birth')),
                ('gender', models.CharField(db_column='Gender', max_length=15)),
                ('salary_pa', models.IntegerField(db_column='Salary_pa')),
                ('job', models.CharField(db_column='Job', max_length=45)),
                ('door_no', models.CharField(db_column='Door_no', max_length=10)),
                ('street', models.CharField(db_column='Street', max_length=45)),
            ],
            options={
                'db_table': 'people',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumberMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(db_column='Phone_number', max_length=15, unique=True)),
            ],
            options={
                'db_table': 'phone_number_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProofsMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proofs', models.CharField(db_column='Proofs', max_length=150, unique=True)),
            ],
            options={
                'db_table': 'proofs_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Public',
            fields=[
                ('pg_id', models.IntegerField(db_column='PG_ID', primary_key=True, serialize=False)),
                ('period', models.CharField(db_column='Period', max_length=15)),
            ],
            options={
                'db_table': 'public',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SignIn',
            fields=[
                ('email_id', models.CharField(db_column='Email_ID', max_length=30, primary_key=True, serialize=False)),
                ('password', models.CharField(db_column='Password', max_length=20)),
            ],
            options={
                'db_table': 'sign_in',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VotesList',
            fields=[
                ('g_aadhaar_number', models.OneToOneField(db_column='G_Aadhaar_number', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='App.people')),
                ('type', models.CharField(db_column='Type', max_length=10)),
            ],
            options={
                'db_table': 'votes_list',
                'managed': False,
            },
        ),
    ]
